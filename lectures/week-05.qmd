---
title: "QML - Week 5"
subtitle: "Regression models: the basics"
author: "Stefano Coretta"
format: revealjs
bibliography: references.bib
---

## Word frequency and reaction times

```{r}
#| label: setup
#| include: false

library(tidyverse)
theme_set(theme_light())
library(brms)
library(bayesplot)
```

::: {.callout-tip appearance="simple"}
**What is the relationship between a word's lexical frequency and reaction times in a lexical decision task in Croatian?**
:::

. . .

::: {.callout-note appearance="simple"}
-   Data from [Lexical decision times for nouns from the Croatian Psycholinguistic Database](https://data.crossda.hr/dataset.xhtml?persistentId=doi:10.23669/EV3NFJ&version=2.0).

-   Lexical decision task (*is it a real Croatian word?*)

    -   **Reaction times**.

    -   **Word frequency**: counts from the Croatian web Corpus *hrWaC*.
:::

## The data

```{r}
#| label: croat
#| echo: true

croat <- read_csv("data/vlasicek2024/croatian-lexdes.csv")
croat |> select(word_string, rt_milliseconds_mean, word_frequency)
```

## Reaction times

```{r}
#| label: rts-plot

croat |> 
  ggplot(aes(rt_milliseconds_mean)) +
  geom_density() +
  geom_rug(alpha = 0.05) +
  labs(
    x = "RT (ms)"
  )

```

## Word frequency

```{r}
#| label: freq-plot

croat |> 
  ggplot(aes(word_frequency/1e6)) +
  geom_histogram(binwidth = 0.25) +
  labs(
    x = "Lexical frequency (millions)",
    subtitle = "Bin-width = 0.25"
  )

```

## Word frequency: logged

```{r}
#| label: freq-log-plot
croat <- croat |> 
  mutate(
    log_freq = log(word_frequency)
  )

croat |> 
  ggplot(aes(log_freq)) +
  geom_density() +
  geom_rug(alpha = 0.15) +
  labs(
    x = "Lexical frequency (logged)",
  )
```

## Word frequency and RTs

```{r}
#| label: rt-freq-plot

croat |> 
  ggplot(aes(log_freq, rt_milliseconds_mean)) +
  geom_point(alpha = 0.5) +
  labs(
    x = "Lexical frequency (logged)",
    y = "RT (ms)"
  )
```

## Gaussian model of RT

$$
RT \sim Gaussian(\mu, \sigma)
$$

. . .

::: {.callout-important appearance="simple"}
But we want to know what happens to RTs depending on the value of lexical frequency...
:::

. . .

::: {.callout-tip appearance="simple"}
Then we let the mean $\mu$ vary by lexical frequency!
:::

$$
\begin{align}
RT & \sim Gaussian(\mu, \sigma)\\
\mu & = \beta_0 + \beta_1 \cdot logf
\end{align}
$$

. . .

::: {.callout-important appearance="simple"}
But what are those $\beta_0$ and $\beta_1$?
:::

## The equation of a line

$$
y = a + b \cdot x
$$

::: {.callout-note appearance="simple"}
-   $a$ is the line **intercept**: the $y$ value when $x$ is `0` zero.

-   $b$ is the line **slope**: the change in $y$ for each unit-increase of $x$.
:::

## Intercept

```{r}
#| label: int-plot
#| fig-asp: 1
#| fig-align: center

ggplot() +
  geom_vline(xintercept = 0, linetype = "dashed", alpha = 0.5) +
  geom_hline(yintercept = 0, linetype = "dashed", alpha = 0.5) +
  geom_abline(intercept = 0, slope = 1, linewidth = 1, colour = "purple") +
  geom_abline(intercept = 2, slope = 1, linewidth = 1, colour = "darkorange") +
  annotate("point", x = 0, y = 0, colour = "purple", size = 5) +
  annotate("point", x = 0, y = 2, colour = "darkorange", size = 5) +
  scale_x_continuous(breaks = seq(-6, 6), limits = c(-6, 6)) +
  scale_y_continuous(breaks = seq(-6, 6), limits = c(-6, 6)) +
  labs(
    x = "X", y = "Y"
  ) +
  theme(text = element_text(size = 30))

```

## Slope

```{r}
#| label: slo-plot
#| fig-asp: 1
#| fig-align: center

ggplot() +
  geom_vline(xintercept = 0, linetype = "dashed", alpha = 0.5) +
  geom_hline(yintercept = 0, linetype = "dashed", alpha = 0.5) +
  geom_abline(intercept = 0, slope = 1, linewidth = 1, colour = "purple") +
  geom_abline(intercept = 0, slope = 2, linewidth = 1, colour = "darkorange") +
  annotate("segment", x = -Inf, xend = 1, y = 1, colour = "purple", linewidth = 1, linetype = "dotted") +
  annotate("segment", x = -Inf, xend = 1, y = 2, colour = "darkorange", linewidth = 1, linetype = "dotted") +
  annotate("segment", y = -Inf, yend = 2, x = 1, linewidth = 1, linetype = "dotted") +
  annotate("point", x = 1, y = 1, colour = "purple", size = 5) +
  annotate("point", x = 1, y = 2, colour = "darkorange", size = 5) +
  scale_x_continuous(breaks = seq(-6, 6), limits = c(-6, 6)) +
  scale_y_continuous(breaks = seq(-6, 6), limits = c(-6, 6)) +
  labs(
    x = "X", y = "Y"
  ) +
  theme(text = element_text(size = 30))
```
