{
  "hash": "262f647ceae9032f6b524da6735e70b6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"QML - Week 5\"\nsubtitle: \"Regression models: the basics\"\nauthor: \"Stefano Coretta\"\nformat: revealjs\nbibliography: references.bib\n---\n\n## Word frequency and reaction times\n\n\n\n::: {.callout-tip appearance=\"simple\"}\n**What is the relationship between a word's lexical frequency and reaction times in a lexical decision task in Croatian?**\n:::\n\n. . .\n\n::: {.callout-note appearance=\"simple\"}\n-   Data from [Lexical decision times for nouns from the Croatian Psycholinguistic Database](https://data.crossda.hr/dataset.xhtml?persistentId=doi:10.23669/EV3NFJ&version=2.0).\n\n-   Lexical decision task (*is it a real Croatian word?*)\n\n    -   **Reaction times**.\n\n    -   **Word frequency**: counts from the Croatian web Corpus *hrWaC*.\n:::\n\n## The data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncroat <- read_csv(\"data/vlasicek2024/croatian-lexdes.csv\")\ncroat |> select(word_string, rt_milliseconds_mean, word_frequency)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,612 × 3\n   word_string  rt_milliseconds_mean word_frequency\n   <chr>                       <dbl>          <dbl>\n 1 ribnjak                      575.           5755\n 2 dostupnost                   624.          15564\n 3 deformacija                  706.           6016\n 4 antioksidans                 914.           7646\n 5 zapis                        623.          44327\n 6 kvadrat                      549.          36394\n 7 presedan                     987.           7786\n 8 zapremnina                  1035.           1434\n 9 prerada                      750.          18759\n10 general                      625.          96640\n# ℹ 2,602 more rows\n```\n\n\n:::\n:::\n\n\n## Reaction times\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](week-05_files/figure-revealjs/rts-plot-1.png){width=960}\n:::\n:::\n\n\n## Word frequency\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](week-05_files/figure-revealjs/freq-plot-1.png){width=960}\n:::\n:::\n\n\n## Word frequency: logged\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](week-05_files/figure-revealjs/freq-log-plot-1.png){width=960}\n:::\n:::\n\n\n## Word frequency and RTs\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](week-05_files/figure-revealjs/rt-freq-plot-1.png){width=960}\n:::\n:::\n\n\n## Gaussian model of RT\n\n$$\nRT \\sim Gaussian(\\mu, \\sigma)\n$$\n\n. . .\n\n::: {.callout-important appearance=\"simple\"}\nBut we want to know what happens to RTs depending on the value of lexical frequency...\n:::\n\n. . .\n\n::: {.callout-tip appearance=\"simple\"}\nThen we let the mean $\\mu$ vary by lexical frequency!\n:::\n\n$$\n\\begin{align}\nRT & \\sim Gaussian(\\mu, \\sigma)\\\\\n\\mu & = \\beta_0 + \\beta_1 \\cdot logf\n\\end{align}\n$$\n\n. . .\n\n::: {.callout-important appearance=\"simple\"}\nBut what are those $\\beta_0$ and $\\beta_1$?\n:::\n\n## The equation of a line\n\n$$\ny = a + b \\cdot x\n$$\n\n::: {.callout-note appearance=\"simple\"}\n-   $a$ is the line **intercept**: the $y$ value when $x$ is `0` zero.\n\n-   $b$ is the line **slope**: the change in $y$ for each unit-increase of $x$.\n:::\n\n## Intercept\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](week-05_files/figure-revealjs/int-plot-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n## Slope\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](week-05_files/figure-revealjs/slo-plot-1.png){fig-align='center' width=960}\n:::\n:::\n\n",
    "supporting": [
      "week-05_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}