{
  "hash": "5ef107746367bc1b2c46ba84abdba5ac",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"QML - Week 5\"\nsubtitle: \"Regression models: the basics\"\nauthor: \"Stefano Coretta\"\nformat: revealjs\nbibliography: references.bib\n---\n\n## Word frequency and reaction times\n\n\n\n::: {.callout-tip appearance=\"simple\"}\n**What is the relationship between a word's lexical frequency and reaction times in a lexical decision task in Croatian?**\n:::\n\n. . .\n\n::: {.callout-note appearance=\"simple\"}\n-   Data from [Lexical decision times for nouns from the Croatian Psycholinguistic Database](https://data.crossda.hr/dataset.xhtml?persistentId=doi:10.23669/EV3NFJ&version=2.0).\n\n-   Lexical decision task (*is it a real Croatian word?*)\n\n    -   **Reaction times**.\n\n    -   **Word frequency**: counts from the Croatian web Corpus *hrWaC*.\n:::\n\n## Which relationship?\n\n```{=html}\n<iframe allowfullscreen frameborder=\"0\" height=\"80%\" mozallowfullscreen style=\"min-width: 500px; min-height: 455px\" src=\"https://app.wooclap.com/events/EIZPEY/questions/68be9c5d60c14c53a7fc9db4\" width=\"100%\"></iframe>\n```\n\n## Reaction times\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](week-05_files/figure-revealjs/rts-plot-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n## Word frequency and RTs\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](week-05_files/figure-revealjs/rt-freq-plot-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n## Logged word frequency and RTs\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](week-05_files/figure-revealjs/rt-logfreq-plot-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n## Gaussian model of RT\n\n$$\nRT \\sim Gaussian(\\mu, \\sigma)\n$$\n\n. . .\n\n::: {.callout-important appearance=\"simple\"}\nBut we want to know what happens to RTs depending on the value of lexical frequency...\n:::\n\n. . .\n\n::: {.callout-tip appearance=\"simple\"}\nThen we let the mean $\\mu$ vary by lexical frequency!\n:::\n\n$$\n\\begin{align}\nRT & \\sim Gaussian(\\mu, \\sigma)\\\\\n\\mu & = \\beta_0 + \\beta_1 \\cdot logf\n\\end{align}\n$$\n\n. . .\n\n::: {.callout-important appearance=\"simple\"}\nBut what are those $\\beta_0$ and $\\beta_1$?\n:::\n\n## The equation of a line\n\n$$\ny = \\beta_0 + \\beta_1 \\cdot x\n$$\n\n::: {.callout-note appearance=\"simple\"}\n-   Go to [Linear models illustrated](https://stefanocoretta.shinyapps.io/lines/).\n\n-   $\\beta_0$ is the line **intercept**: the $y$ value when $x$ is `0` zero.\n\n-   $\\beta_1$ is the line **slope**: the change in $y$ for each unit-increase of $x$.\n:::\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n## Regression model\n\n$$\n\\begin{align}\nRT & \\sim Gaussian(\\mu, \\sigma)\\\\\n\\mu & = \\beta_0 + \\beta_1 \\cdot logf & \\text{[Regression equation]}\n\\end{align}\n$$\n\n::: {.callout-tip appearance=\"simple\"}\n-   A **regression model** is a model based on the equation of a line.\n\n-   The model **estimates** $\\beta_0$ (the intercept) and $\\beta_1$ (the slope) from the data (i.e. the observed $RT$ and $logf$ values).\n:::\n\n. . .\n\n::: {.callout-note appearance=\"simple\"}\n-   $\\beta_0$, intercept\n\n    -   Mean RT value *when logged frequency is `0` zero* (i.e. when word frequency is 1; `exp(0)` = 1).\n\n-   $\\beta_1$, slope\n\n    -   *Change* in mean RT for each unit increase of log-frequency (when log-frequency goes from $x$ to $x + 1$).\n:::\n\n## \n\n```{=html}\n<iframe allowfullscreen frameborder=\"0\" height=\"80%\" mozallowfullscreen style=\"min-width: 500px; min-height: 355px\" src=\"https://app.wooclap.com/events/EIZPEY/questions/68d3b78edd9a104b0899fcc1\" width=\"100%\"></iframe>\n```\n\n## Model's posterior predictions\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](week-05_files/figure-revealjs/rt-bm-cond-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n## Word frequency and reaction times (bis)\n\n::: {.callout-tip appearance=\"simple\"}\n**What is the relationship between a word's lexical frequency and reaction times in a lexical decision task in Croatian?**\n:::\n\n. . .\n\n::: {.callout-note appearance=\"simple\"}\n-   When log-frequency is 0, the mean RTs are between 1084 and 1129 ms at 95% confidence.\n\n-   For each unit increase of log-frequency, the mean RTs decrease by 43-48 ms, at 95% confidence.\n:::\n\n## Correlation in NOT causation\n\n::: callout-important\n### Be careful!\n\n-   **Correlation** between two variables: they co-vary, i.e. they show a systematic association (their values tend to vary together in a consistent pattern).\n\n-   **Spurious correlations**: two variables can look correlated because of bias from another variable.\n:::\n\n. . .\n\n::: {.callout-note appearance=\"simple\"}\n1.  Number of plant names in a language vs. biodiversity of the region\n    -   Languages in biodiverse regions have more words for plants.\n    -   **Mediator**: cultural reliance on plants.\n2.  Language endangerment vs. economic development\n    -   Higher economic development is associated with greater language endangerment.\n    -   **Confounder**: colonial history.\n3.  Language prestige vs government policy\n    -   High prestige languages and officially supported languages each attract learners.\n    -   **Collider**: If you only look at languages with many learners, prestige and policy might appear related even if they're not causally connected.\n:::\n\n## But it is if you use causal inference...\n\n::: callout-tip\n### Causal inference\n\n-   Correlation *can* be interpreted causally if you adopt a **causal inference** approach.\n\n-   Learn about it in McElreath's textbook *Statistical Rethinking*. Also check [STeW](https://uoelel.github.io/stew.html).\n:::\n",
    "supporting": [
      "week-05_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}