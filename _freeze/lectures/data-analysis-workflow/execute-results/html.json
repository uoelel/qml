{
  "hash": "dd0877008f877727cf2f820e8ac77f46",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data analysis workflow\"\nauthor: \"Stefano Coretta\"\nformat: mono-light-revealjs\neditor: source\nfilters:\n  - tachyonsextra\nexecute: \n  echo: true\n---\n\n\n\n\n\n## Research process cycle: Overview\n\n![](/img/res-process-cycle.png){fig-align=\"center\"}\n\n## Research questions and hypothesis\n\n::: box-note\n-   Research **questions** are testable questions.\n\n-   Research **hypotheses** are falsifiable statements.\n\n-   Check again [this entry](../posts/research-qh.qmd).\n:::\n\n. . .\n\n::: box-tip\nTwo case studies:\n\n-   **Descriptive and exploratory**: Do British infants use a different number of gestures depending on their cultural background?\n\n-   **Explanatory and corroboratory**: vowel duration and gesture distance.\n:::\n\n## British infants' gestures: Study design\n\n::: box-note\n-   Published paper: <https://www.doi.org/10.1111/cdev.13406>\n\n-   Three cultural backgrounds: English, Bangladeshi and Cantonese.\n\n-   At least 20 infants per background.\n\n-   Laboratory setting, three tasks.\n:::\n\n. . .\n\n::: box-note\n**Analysis plan** (gesture count by background)\n\n-   Summaries with median and range.\n\n-   Visualisation with strip charts.\n\n-   Regression models\n\n    -   Outcome variable: gesture count → [Poisson family](../posts/regression-poisson.qmd).\n\n    -   Predictors: cultural background.\n:::\n\n## British infants' gestures: Data simulation\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nN <- 20\nbackground <- c(\"English\", \"Bangladeshi\", \"Cantonese\")\ncount_en <- rpois(N, 4)\ncount_ba <- rpois(N, 1)\ncount_ca <- rpois(N, 1.5)\n\ngestures_sim <- tibble(\n  background = rep(background, each = N),\n  count = c(count_en, count_ba, count_ca)\n)\n\ngestures_sim\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 60 × 2\n   background count\n   <chr>      <int>\n 1 English        4\n 2 English        4\n 3 English        4\n 4 English        1\n 5 English        0\n 6 English        3\n 7 English        3\n 8 English        4\n 9 English        4\n10 English        4\n# ℹ 50 more rows\n```\n\n\n:::\n:::\n\n\n\n## British infants' gestures: Data simulation (plotting)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngestures_sim |> \n  group_by(background) |> \n  summarise(median(count), min(count), max(count))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 4\n  background  `median(count)` `min(count)` `max(count)`\n  <chr>                 <dbl>        <int>        <int>\n1 Bangladeshi               1            0            2\n2 Cantonese                 1            0            5\n3 English                   4            0            6\n```\n\n\n:::\n:::\n\n\n\n## British infants' gestures: Data simulation (plotting)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngestures_sim |> \n  ggplot(aes(background, count)) +\n  geom_jitter(width = 0.1)\n```\n\n::: {.cell-output-display}\n![](data-analysis-workflow_files/figure-revealjs/gestures-sim-plot-1.png){width=960}\n:::\n:::\n\n\n\n## British infants' gestures: Data simulation (model)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(brms)\n\ngestures_sim_bm <- brm(\n  count ~ 0 + background,\n  family = poisson,\n  data = gestures_sim,\n  cores = 4,\n  seed = 9527,\n  file = \"cache/gestures_sim_bm\"\n)\n```\n:::\n\n\n\n## British infants' gestures: Data simulation (model)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(gestures_sim_bm, prob = 0.8)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Family: poisson \n  Links: mu = log \nFormula: count ~ 0 + background \n   Data: gestures_sim (Number of observations: 60) \n  Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1;\n         total post-warmup draws = 4000\n\nRegression Coefficients:\n                      Estimate Est.Error l-80% CI u-80% CI Rhat Bulk_ESS\nbackgroundBangladeshi     0.20      0.20    -0.05     0.45 1.00     3695\nbackgroundCantonese       0.39      0.18     0.16     0.62 1.00     3934\nbackgroundEnglish         1.35      0.11     1.21     1.49 1.00     3935\n                      Tail_ESS\nbackgroundBangladeshi     2480\nbackgroundCantonese       2837\nbackgroundEnglish         2974\n\nDraws were sampled using sampling(NUTS). For each parameter, Bulk_ESS\nand Tail_ESS are effective sample size measures, and Rhat is the potential\nscale reduction factor on split chains (at convergence, Rhat = 1).\n```\n\n\n:::\n:::\n\n\n\n## British infants' gestures: Data simulation (model)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconditional_effects(gestures_sim_bm, prob = 0.8)\n```\n\n::: {.cell-output-display}\n![](data-analysis-workflow_files/figure-revealjs/gestures-sim-bm-cond-1.png){width=960}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}