{
  "hash": "943814e6ad130aaa4ec6077741a356cd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"QML - Week 4\"\nsubtitle: \"Bayesian inference\"\nauthor: \"Stefano Coretta\"\nformat: revealjs\nbibliography: references.bib\n---\n\n## Probabilities\n\n\n\n::: callout-note\n**Probability**\n\n-   Probability of an event occurring.\n\n-   Probabilities can only be **between 0 and 1**.\n\n    -   ‚õîÔ∏è 0 means **impossible**.\n    -   ü§∑ 0.5 means **it can happen but it can also not happen**.\n    -   ‚úÖ 1 means **certain**.\n:::\n\n## Probabilities\n\n![](/img/probabilities.png){fig-align=\"center\"}\n\n## \n\n::: callout-note\n### **Probability**\n\n-   Probability of an event occurring: 0 to 100% probability.\n\n-   **Probability of a statistical variable being some numeric value**: a bit more complicated...\n:::\n\n. . .\n\n::: {.callout-tip appearance=\"simple\"}\n**We need probability distributions!**\n:::\n\n## Distribution of probability\n\n<br>\n\n![](/img/grubabilities.png){fig-align=\"center\"}\n\n## Probability distributions\n\n::: {.callout-note appearance=\"simple\"}\nA **probability distribution** describes *how the probabilities are distributed over the values* that a variable can take on.\n:::\n\n. . .\n\n::: callout-note\n### Two types of probability distributions\n\n-   Discrete probability distributions.\n\n-   Continuous probability distributions.\n:::\n\n. . .\n\n::: {.callout-tip appearance=\"simple\"}\nYou learned about discrete and continuous variables in Week 2!\n\n**Discrete variables (numeric or categorical) follow discrete probability distributions and continuous variables follow continuous probability distributions.**\n:::\n\n## Calculating probability distributions\n\n::: {.callout-note appearance=\"simple\"}\nYou will never need to calculate probability distributions by hand, but it is useful to know about the two mathematical functions that are used for that purpose.\n\n-   The **Probability Mass Function** (PMF) for discrete probability distributions.\n\n-   The **Probability Density Function** (PDF) for continuous probability distributions.\n:::\n\n## Probability Mass Function\n\n![](/img/dice.png){fig-align=\"center\"}\n\n## Probability Density Function\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](week-04_files/figure-revealjs/pdf-1.png){width=960}\n:::\n:::\n\n\n## Parameters\n\n::: {.callout-note appearance=\"simple\"}\n- **Probability distributions can be summarised with a set of parameters.**\n  \n- Different types of probability distributions have a different number of parameters and different parameters.\n:::\n\n. . .\n\n::: callout-tip\n### Gaussian distribution\n\nThe **Gaussian probability distribution** is a continuous probability distribution and it has two parameters:\n\n- The mean $\\mu$.\n- The standard deviation (SD) $\\sigma$.\n\nGo to [Seeing Theory](https://seeing-theory.brown.edu/probability-distributions/index.html#section2).\n:::\n\n::: notes\nSeeing Theory was created by Daniel Kunin while an undergraduate at Brown University. The goal of this website is to make statistics more accessible through interactive visualizations (designed using Mike Bostock‚Äôs JavaScript library D3.js).\n\n<https://seeing-theory.brown.edu/index.html#3rdPage>\n:::\n\n## Gaussian data\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](week-04_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}